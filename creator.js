var Widget = {
    count : 0,
    hasSelected : 'scr',
    jsonDict : [],
    getID : function(type){
        var id = type + (this.count++).toString(16);
        // this.jsonDict.push(id);
        return id;
    },
    updateDict : function(id, json){
        this.jsonDict[id] = json;
    }
};

// const widgetinfo = {
//     id : '',
//     type : '',
//     Attribute : {}
// };

function pushToList(id){
    var newItem = "<a class='list-group-item list-group-item-action' id='list-widget-item' data-toggle='list' href='#' role='tab' aria-controls='profile'>" + id + "</a>"
    $("#list-widget").append(newItem);
}

//Parametres are string
function createWidget(type, strPar) {
    var id = Widget.getID(type);
    var par = strPar;
    if(strPar == 'none'){
        par = '';
    }
    console.log(id);
    var code = [
        id + " = lv." + type + "(" + par + ")",
        id + ".set_drag(1)",
        id + ".set_protect(lv.PROTECT.PRESS_LOST)",
        "print(getobjattr(" + id + ",\'" + id + "\'))",
        id + ".set_event_cb(lambda obj=None, event=-1, name=\'" + id + '\'' + ", real_obj =" + id + " : whatEvent(real_obj, name, event))"
    ];
    var diffType = ['ddlist', 'page', 'roller'];
    if (diffType.indexOf(type) != -1) {
        code.push(id + ".get_child(None).set_drag_parent(1)");
    }
    mp_js_do_str(code.join('\n'));
    pushToList(id);
    SRCSign.push("lv_obj_t * " + id + " = lv_" + type + "_create(" + id + ", NULL);");
}

//This is a python function to get an object info
// def getobjattr(obj):
//     l=dir(scr)
//     d={}
//     for i in l:
//         if 'get_' in i:
//             try:
//                 ret = eval('scr.' + i + '()')
//                 if isinstance(ret, (int,float,str,bool)):
//                     d[i] = ret
//             except:
//                 pass
// print(ujson.dumps(d))


var nowID = '';

function updateShow(json){
    $("#showAttr").empty();
    let inputGr = "<div class='input-group mb-3'><div class='input-group-prepend'><span class='input-group-text'>@@</span></div><input id='attrbox' type='text' class='form-control' placeholder=@@ value=##></input></div>";

    for(let key in json){
        if(key == 'id'){
            nowID = json[key];
        }
        var strHtml = inputGr;
        $("#showAttr").append(strHtml.replace('@@', key).replace('@@', key).replace('##', json[key]).replace('get_', '').replace('get_', 'set_'));
    }

    //Highlight object
    let ctx = document.getElementById("canvas").getContext("2d");
    ctx.strokeRect(json["get_x"], json["get_y"], json["get_width"], json["get_height"]);
}


$("#toolbox > button").click(function(){
    var str = this.innerHTML.toLowerCase();
    createWidget(str, Widget.hasSelected);
})

$("#list-widget").on("click", "#list-widget-item", function(){
    var str = this.innerHTML;
    Widget.hasSelected = str;
})


$("#showAttr").on("change", "#attrbox", function(){
    var str = nowID + '.' + this.placeholder + '(' + this.value + ')';
    console.log(str);
    mp_js_do_str(str);
    SRCSign.push("lv_obj_" + this.placeholder + "(" + nowID + ',' + this.value + ")");
})

$("#screenshot").click(function(){
    let cs = document.getElementById("canvas");
    cs.toBlob(function(blob){
        saveAs(blob, "screenshot.png");
    });
})


var SRCSign = [];
$("#gencode").click(function(){
    let hFile = "/**\n * @interface.h     Generated by walv\n *\n */\n#ifndef _INTERFACE_H_\n#define _INTERFACE_H_\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n/*********************\n *      INCLUDES\n *********************/\n#ifdef LV_CONF_INCLUDE_SIMPLE\n#include \"lvgl.h\"\n#include \"lv_ex_conf.h\"\n#else\n#include \"./lvgl/lvgl.h\"\n#include \"./lv_ex_conf.h\"\n#endif\nvoid lv_gui_main();\n#ifdef __cplusplus\n} /* extern \"C\" */\n#endif\n#endi\n";
    let blob = new Blob([hFile], {type: "text/plain;charset=utf-8"});
    saveAs(blob, "interface.h");

    SRCSign.unshift("#include \"interface\"\n\nvoid lv_gui_main()\n{");
    SRCSign.push("}");
    blob = new Blob([SRCSign.join('\n')], {type: "text/plain;charset=utf-8"});
    saveAs(blob, "interface.c");
})

$("#repl_btn").click(function(){
    if($("#mpy_repl").is(":hidden")){
        $("#mpy_repl").show();
    }else{
        $("#mpy_repl").hide();
    }
})

function json2Code(){
    var src;
    for(let i in Widget.jsonDict){
        src += "lv_obj_t * " + i + " = "    ;
        var obj = dict.jsonDict[i];
        
    }
    return src;
}